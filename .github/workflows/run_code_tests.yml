name: Python tests
run-name: Running unittests on commit ${{ github.sha }}

on:
  push:

  pull_request:

  workflow_dispatch:
    inputs:
      branch:
        type : choice 
        description: 'Select branch (it does not work through the UI, do not use it)'
        required: true
        default: 'master'
        options:
          - 'master'
          - 'develop'

jobs:
  testing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout to selected branch
        uses: actions/checkout@v2  ### changing branch
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest python_testing_files 

  formatting:
    runs-on: ubuntu-latest
    needs: testing
    steps:
      - name: Checkout to selected branch
        uses: actions/checkout@v2  ### changing branch
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run formatting
        run: |
          black python_testing_files

      - name: Run tests ### once again, to check if formatting didn't break anything. Store coverage
        run: | 
          pytest python_testing_files --cov=python_testing_files --cov-report=xml

      # test artifact upload
      - name: Upload coverage as artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage.xml
          retention-days: 1

      - name: Add coverage to gitignore
        run: |
          echo "coverage.xml" >> .gitignore
          echo "python_testing_files/coverage.xml" >> .gitignore
          ls -lh ./
          ls -lh python_testing_files/
          rm coverage.xml

      # for fun, download the artifact back
      - name: Download coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage
          path: python_testing_files/coverage.xml
      
      - name: Print content of the coverage file
        run: |
          cat python_testing_files/coverage.xml

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5 # git auto commit action, nothing else to add
        with:
            commit_message: Automatic formatting
            branch: ${{ github.event.inputs.branch }} 


            # Optional glob pattern of files which should be added to the commit
            file_pattern: python_testing_files/*.py
        # env:  # not required anytmore for this action
        #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  create_artifacts:
    runs-on: ubuntu-latest
    steps:
      - name: Create small artifact
        run: |
          echo "This is a small artifact" > small_artifact.txt
          mkdir ./skipperArts
          echo "This is another small artifact" > ./skipperArts/small_artifact.txt

      - name: Create system information artifact
        run: |
          echo "System Information:" > system_info.txt
          echo "OS: $(uname -a)" >> system_info.txt
          echo "CPU: $(lscpu)" >> system_info.txt
          echo "Memory: $(free -h)" >> system_info.txt

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: |
            small_artifact.txt
            skipperArts/
            system_info.txt
      
    

        
    